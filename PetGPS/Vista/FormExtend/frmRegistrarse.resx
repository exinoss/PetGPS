<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>